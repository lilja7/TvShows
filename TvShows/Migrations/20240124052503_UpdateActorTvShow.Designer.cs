// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TvShows.Data;

#nullable disable

namespace TvShows.Migrations
{
    [DbContext(typeof(TvShowDbContext))]
    [Migration("20240124052503_UpdateActorTvShow")]
    partial class UpdateActorTvShow
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("ActorTvShow", b =>
                {
                    b.Property<int>("Actorsid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TvShowsid")
                        .HasColumnType("INTEGER");

                    b.HasKey("Actorsid", "TvShowsid");

                    b.HasIndex("TvShowsid");

                    b.ToTable("ActorTvShow");
                });

            modelBuilder.Entity("TvShows.Models.Actor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActorName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DateOfBirth")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("Actors");
                });

            modelBuilder.Entity("TvShows.Models.ActorTvShow", b =>
                {
                    b.Property<int>("ActorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TvShowId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ActorId", "TvShowId");

                    b.HasIndex("TvShowId");

                    b.ToTable("ActorTvShows");
                });

            modelBuilder.Entity("TvShows.Models.TvShow", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("TvShows");
                });

            modelBuilder.Entity("ActorTvShow", b =>
                {
                    b.HasOne("TvShows.Models.Actor", null)
                        .WithMany()
                        .HasForeignKey("Actorsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TvShows.Models.TvShow", null)
                        .WithMany()
                        .HasForeignKey("TvShowsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TvShows.Models.ActorTvShow", b =>
                {
                    b.HasOne("TvShows.Models.Actor", "Actor")
                        .WithMany("ActorTvShows")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TvShows.Models.TvShow", "TvShow")
                        .WithMany("ActorTvShows")
                        .HasForeignKey("TvShowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("TvShow");
                });

            modelBuilder.Entity("TvShows.Models.Actor", b =>
                {
                    b.Navigation("ActorTvShows");
                });

            modelBuilder.Entity("TvShows.Models.TvShow", b =>
                {
                    b.Navigation("ActorTvShows");
                });
#pragma warning restore 612, 618
        }
    }
}
